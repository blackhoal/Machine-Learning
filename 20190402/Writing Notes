모듈
numpy - 계산
pandas - 데이터 프레임
matplotlib.pyplot - 시각화
--------------------------------------------------------------------------------------------------------------------------------
메소드 정리
* isnull()
  - DataFrame 전체의 결측값 여부 확인
  - 결측이면 True, 결측이 아니면 False의 boollean 값 반환
* any()
  - Boollean 값들의 시퀀스를 받아 그중에 하나라도 True가 존재할 경우 True를 반환
* fillna()
  - NAN의 값을 다른 값으로 대체
  - 내부의 메소드가 ffill or pad일 경우 앞 방향으로 채우기 -> data.fillna(method='ffill') or data.fillna(method='pad')
* flatten()
  - 다차원의 배열을 1차원으로 출력
  - ravel 메소드로 대체 가능 
* array([], ndmin = 2)
  - 2차원 배열로 변경
ex) test = np.array([1,2,3,4,5], ndmin=2)
    Out : 
    array([[1, 2, 3, 4, 5]])

    test7 = np.array([[1,2,3],[4,5,6],[7,8,9]])
    test7[1:,1]
    Out :
    array([5, 8])

    test7[:,[0,2]] 
    Out :
    array([[1, 3],
           [4, 6],
           [7, 9]])
           
* shape()
  - 동적으로 할당된 배열에 대해 몇행, 몇열의 행렬로 구성되었는지 확인
* reshape()
  - 생성된 배열의 내부 데이터는 보존한 채로 형태만 변경
   ex) a = np.arange(12)
       b = a.reshape(3, 4)

--------------------------------------------------------------------------------------------------------------------------------
scikit-learn 패키지를 사용한 선형 회귀분석 순서
1. LinearRegression 클래스 객체 생성
2. fit 메소드로 모형 추정 및 상수항 결합 수행
3. predict 메소드로 새로운 입력 데이터에 대한 출력 데이터 예측

linearTest = LinearRegression(fit_intercept=True) -> 1번
linearTest.fit(xTrain, yTrain) -> 2번
yPrediction = linearTest.predict(xTest) -> 3번

*2번을 거친 후 모형 객체는 다음의 속성을 가진다.
coef_ : 추정된 가중치 벡터(기울기)
intercept_ : 추정된 상수항(y절편)
* fit_intercept 인수
	- 모형에 상수항이 있는가 없는가를 결정하는 인수
Default 값은 True이며, 만약 상수항이 없을 경우 fit_intercept=False로 설정
--------------------------------------------------------------------------------------------------------------------------------
train_test_split 명령
	- 학습용 데이터와 검증용 데이터로 단순 데이터 분리 수행
	- 형태
	train_test_split(data, data2, test_size, train_size, random_state)
	1.data: 독립 변수 데이터 배열 또는 pandas 데이터프레임
	2.data2: 종속 변수 데이터. data 인수에 종속 변수 데이터가 같이 있으면 생략할 수 있다.
	3.test_size: 검증용 데이터 개수. 1보다 작은 실수이면 비율을 나타낸다.
	4.train_size: 학습용 데이터의 개수. 1보다 작은 실수이면 비율을 나타낸다. test_size와 train_size 중 하나만 있어도 된다.
	5.random_state: 난수 시드
예시) df_train, df_test = train_test_split(df, test_size=0.3, random_state=0)
--------------------------------------------------------------------------------------------------------------------------------
파이썬의 자료구조
1. 수(Numbers)
2. 문자열(String)
3. 리스트(List)
4. 튜플(Tuple)
5. 사전(Dictionary)

* 리스트와 튜플의 차이 
	- 리스트는 요소에 대한 변경이 가능, 튜플은 변경이 불가능
	- 괄호로 구분
	  튜플(소괄호(요소)) 
	  딕셔너리(중괄호{요소}) 
	  리스트(대괄호[요소])

